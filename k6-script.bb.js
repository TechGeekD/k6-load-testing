// Auto-generated by the Load Impact converter
import { Trend } from "k6/metrics";

import "./libs/shim/core.js";
import "./libs/shim/expect.js";
import "./libs/shim/urijs.js";
import { esQuery as queryJSON } from "./json.js"
import { baseURL, projectID, headers } from "./constants.js";

export let options = { maxRedirects: 4, iterations: "1000", vus: 100,
  ext: {
    loadimpact: {
      projectID: projectID,
      name: 'TopSoundRecord'
    }
  }
};

const overAllReqTime = new Trend("overall_req_time");

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  collection: {
    baseURL: baseURL
  }
});

const payload = JSON.stringify(queryJSON);

export default function() {
  /** @desc GraphQL Endpoint: hit GQL RestAPI endpoint */
  postman[Request]({
    name: "GraphQL top-sound",
    id: "2f528855-0d66-43d1-9f25-a0882abcc640",
    method: "POST",
    address: "{{baseURL}}/graphql",
    data: payload,
    headers: headers,
    post(response) {

      // console.log(JSON.stringify(response, null, 2))

      overAllReqTime.add(response.timings.blocked);
      overAllReqTime.add(response.timings.looking_up);
      overAllReqTime.add(response.timings.connecting);
      overAllReqTime.add(response.timings.sending);
      overAllReqTime.add(response.timings.waiting);
      overAllReqTime.add(response.timings.receiving);
      overAllReqTime.add(response.timings.duration);

      pm.test("Status code is 200", function () {
        pm.response.to.have.status(200);
      });

      pm.test("Response to have topSoundRecordings with length of 25", function() {
        const jsonData = response.json();
        pm.expect(jsonData.data.topSoundRecordings.length).to.eql(25);
      });
    }
  });
}
